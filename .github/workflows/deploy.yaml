name: Deploy App

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: fizteh-radio@radiomipt.ru
      PORT: 22
      DEPLOY_DIR: /home/fizteh-radio/bot
      CONFIG_PATH: /home/fizteh-radio/bot/prod.yaml
      ENV_FILE_PATH: /home/fizteh-radio/bot/.env
      COMPOSE_ENV: /home/fizteh-radio/bot/compose.env
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup ssh
        run: |
          echo "$DEPLOY_SSH_KEY" > deploy_key.pem
          sudo chmod 600 deploy_key.pem
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Setup environment
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no -p ${{ env.PORT }} ${{ env.HOST }} \
          "mkdir -p ${{ env.DEPLOY_DIR }} ${{ env.DEPLOY_DIR }}/config && \
          rm -f ${{ env.ENV_FILE_PATH }} && \
          echo "CONFIG_PATH=/bot/config/prod.yaml" >> ${{ env.ENV_FILE_PATH }} && \
          echo "TG_TOKEN=${{ secrets.TG_TOKEN }}" >> ${{ env.ENV_FILE_PATH }} && \
          echo "YA_TOKEN=${{ secrets.YA_TOKEN }}" >> ${{ env.ENV_FILE_PATH }}"
      - name: Send config files
        run: |
          scp -r -i deploy_key.pem -o StrictHostKeyChecking=no -P ${{ env.PORT }} \
          compose.yaml  \
          ${{ env.HOST }}:${{ env.DEPLOY_DIR }}
          scp -r -i deploy_key.pem -o StrictHostKeyChecking=no -P ${{ env.PORT }} \
          config/prod.yaml  \
          ${{ env.HOST }}:${{ env.DEPLOY_DIR }}/config
      - name: Deploy to server
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no -p ${{ env.PORT }} ${{ env.HOST }} \
          'cd ${{ env.DEPLOY_DIR }} && \
          sudo docker compose stop && \
          sudo docker image rm -f gingld/fizteh-radio-bot && \
          sudo docker compose up -d'